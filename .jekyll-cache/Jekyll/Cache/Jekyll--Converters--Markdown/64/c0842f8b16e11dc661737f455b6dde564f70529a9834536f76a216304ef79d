I"¶ı<p>A brief introduction to pandas</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Import packages
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
</code></pre></div></div>

<h3 id="series">Series</h3>
<p>‚ÄúSeries is a one-dimensional labeled array capable of holding any data type (integers, strings, floating point numbers, Python objects, etc.).‚Äù</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a Series from a ndarray
</span><span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
<span class="c1"># Indexes are created by default
</span><span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0     1
1     6
2    11
3    16
dtype: int32
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a Series with indexes
</span><span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Query the indexes of a Series
</span><span class="n">s</span><span class="p">.</span><span class="n">index</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Index(['a', 'b', 'c', 'd', 'e'], dtype='object')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a Series from a dict
</span><span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s">'k1'</span><span class="p">:</span> <span class="s">'hello'</span><span class="p">,</span> <span class="s">'k2'</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s">'k3'</span><span class="p">:</span> <span class="mf">19.8</span><span class="p">}</span>
<span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>k1    hello
k2       10
k3     19.8
dtype: object
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a Series from a dict
</span><span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s">'k1'</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">,</span> <span class="s">'k2'</span><span class="p">:</span> <span class="mi">111</span><span class="p">,</span> <span class="s">'k3'</span><span class="p">:</span> <span class="mf">19.8</span><span class="p">}</span>
<span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>k1      1.0
k2    111.0
k3     19.8
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a Series from a scalar value
</span><span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="mf">10.</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">])</span>
<span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a    10.0
b    10.0
c    10.0
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Query the data type
</span><span class="n">s</span><span class="p">.</span><span class="n">dtype</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dtype('float64')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Series to ndarray-like
</span><span class="n">s</span><span class="p">.</span><span class="n">values</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([10., 10., 10.])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Access values by index values
</span><span class="n">s</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">])</span>
<span class="n">s</span><span class="p">[</span><span class="s">'e'</span><span class="p">]</span> 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.22115728602833706
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Access and Set values by index values
</span><span class="n">s</span><span class="p">[</span><span class="s">'a'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a    0.000000
b   -0.378787
c   -0.380565
d   -1.015425
e    0.221157
dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Query if index exists
</span><span class="s">'c'</span> <span class="ow">in</span> <span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>True
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Sort values
</span><span class="n">s</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>e    0.221157
a    0.000000
b   -0.378787
c   -0.380565
d   -1.015425
dtype: float64
</code></pre></div></div>

<h3 id="dataframe">DataFrame</h3>
<p>‚ÄúDataFrame is a 2-dimensional labeled data structure with columns of potentially different types. You can think of it like a spreadsheet or SQL table, or a dict of Series objects‚Äù</p>

<p>‚ÄúAlong with the data, you can optionally pass index (row labels) and columns (column labels) arguments‚Äù</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a DataFrame from a dict of Series
</span><span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">]),</span>
     <span class="s">'second'</span><span class="p">:</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])}</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>first</th>
      <th>second</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>10.0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>b</th>
      <td>20.0</td>
      <td>2</td>
    </tr>
    <tr>
      <th>c</th>
      <td>30.0</td>
      <td>3</td>
    </tr>
    <tr>
      <th>d</th>
      <td>NaN</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Query the indexes
</span><span class="n">df</span><span class="p">.</span><span class="n">index</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Index(['a', 'b', 'c', 'd'], dtype='object')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Query the columns
</span><span class="n">df</span><span class="p">.</span><span class="n">columns</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Index(['first', 'second'], dtype='object')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Query the datatypes
</span><span class="n">df</span><span class="p">.</span><span class="n">dtypes</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>first     float64
second      int64
dtype: object
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a dataframe picking some indexes
</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>first</th>
      <th>second</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>c</th>
      <td>30.0</td>
      <td>3</td>
    </tr>
    <tr>
      <th>b</th>
      <td>20.0</td>
      <td>2</td>
    </tr>
    <tr>
      <th>d</th>
      <td>NaN</td>
      <td>4</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a dataframe picking some columns too
</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">],</span> <span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'second'</span><span class="p">,</span> <span class="s">'third'</span><span class="p">])</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>second</th>
      <th>third</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>c</th>
      <td>3</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>b</th>
      <td>2</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>d</th>
      <td>4</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a dataframe from a dict of ndarrays/list
</span><span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">40</span><span class="p">],</span> <span class="s">'second'</span><span class="p">:</span> <span class="p">[</span><span class="mf">1.1</span><span class="p">,</span> <span class="mf">1.2</span><span class="p">,</span> <span class="mf">1.3</span><span class="p">,</span> <span class="mf">1.4</span><span class="p">]}</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<span class="n">df</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>first</th>
      <th>second</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>10</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>20</td>
      <td>1.2</td>
    </tr>
    <tr>
      <th>2</th>
      <td>30</td>
      <td>1.3</td>
    </tr>
    <tr>
      <th>3</th>
      <td>40</td>
      <td>1.4</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create dataframe defining indexes
</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">d</span><span class="p">,</span> <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">])</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>first</th>
      <th>second</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>10</td>
      <td>1.1</td>
    </tr>
    <tr>
      <th>b</th>
      <td>20</td>
      <td>1.2</td>
    </tr>
    <tr>
      <th>c</th>
      <td>30</td>
      <td>1.3</td>
    </tr>
    <tr>
      <th>d</th>
      <td>40</td>
      <td>1.4</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Create a dataframe from a NumPy array
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s">'abcdefghij'</span><span class="p">),</span>
             <span class="n">columns</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s">'ABCD'</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>-0.396688</td>
      <td>0.311491</td>
      <td>-0.333861</td>
      <td>0.168932</td>
    </tr>
    <tr>
      <th>b</th>
      <td>0.525654</td>
      <td>0.834869</td>
      <td>1.636704</td>
      <td>0.393203</td>
    </tr>
    <tr>
      <th>c</th>
      <td>1.461059</td>
      <td>1.011699</td>
      <td>0.089861</td>
      <td>-1.813207</td>
    </tr>
    <tr>
      <th>d</th>
      <td>2.069092</td>
      <td>1.195152</td>
      <td>-1.061165</td>
      <td>-0.777508</td>
    </tr>
    <tr>
      <th>e</th>
      <td>1.453618</td>
      <td>-0.481199</td>
      <td>0.995436</td>
      <td>0.367830</td>
    </tr>
    <tr>
      <th>f</th>
      <td>-1.236010</td>
      <td>-1.037308</td>
      <td>0.981124</td>
      <td>-0.903936</td>
    </tr>
    <tr>
      <th>g</th>
      <td>-0.839587</td>
      <td>0.049658</td>
      <td>-0.431221</td>
      <td>0.603668</td>
    </tr>
    <tr>
      <th>h</th>
      <td>-1.420413</td>
      <td>0.412668</td>
      <td>-0.963789</td>
      <td>0.471481</td>
    </tr>
    <tr>
      <th>i</th>
      <td>0.385292</td>
      <td>0.831554</td>
      <td>-0.781036</td>
      <td>-1.117775</td>
    </tr>
    <tr>
      <th>j</th>
      <td>0.747233</td>
      <td>0.215479</td>
      <td>-0.535672</td>
      <td>-0.231791</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># View first rows
</span><span class="n">df</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>0.260968</td>
      <td>1.462966</td>
      <td>0.935928</td>
      <td>-1.416606</td>
    </tr>
    <tr>
      <th>b</th>
      <td>-0.158592</td>
      <td>1.765306</td>
      <td>0.153076</td>
      <td>-0.099588</td>
    </tr>
    <tr>
      <th>c</th>
      <td>-3.704010</td>
      <td>0.346566</td>
      <td>1.709313</td>
      <td>3.173983</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.454166</td>
      <td>1.719496</td>
      <td>0.095962</td>
      <td>-1.357128</td>
    </tr>
    <tr>
      <th>e</th>
      <td>-2.583424</td>
      <td>-0.319739</td>
      <td>-0.212480</td>
      <td>1.210537</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># View last rows
</span><span class="n">df</span><span class="p">.</span><span class="n">tail</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>h</th>
      <td>0.526778</td>
      <td>-0.383277</td>
      <td>0.599304</td>
      <td>0.267912</td>
    </tr>
    <tr>
      <th>i</th>
      <td>0.518058</td>
      <td>2.062913</td>
      <td>1.682550</td>
      <td>-0.083072</td>
    </tr>
    <tr>
      <th>j</th>
      <td>-0.603516</td>
      <td>0.332087</td>
      <td>-1.479013</td>
      <td>1.254228</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Return a numpy representation
</span><span class="n">A</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">values</span>
<span class="n">A</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[-0.39668765,  0.31149099, -0.33386089,  0.16893183],
       [ 0.5256545 ,  0.83486865,  1.63670404,  0.39320261],
       [ 1.46105881,  1.01169944,  0.08986103, -1.81320698],
       [ 2.06909247,  1.19515187, -1.06116542, -0.77750805],
       [ 1.45361793, -0.48119892,  0.9954361 ,  0.36783024],
       [-1.23601035, -1.03730773,  0.98112443, -0.90393631],
       [-0.83958668,  0.04965843, -0.43122089,  0.60366836],
       [-1.42041273,  0.41266751, -0.9637889 ,  0.47148076],
       [ 0.38529206,  0.83155384, -0.78103554, -1.11777487],
       [ 0.74723321,  0.2154795 , -0.53567181, -0.23179069]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Get dataframe column as NumPy presentation
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="n">X</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">c_</span><span class="p">[</span><span class="n">df</span><span class="p">[</span><span class="s">'A'</span><span class="p">]]</span>
<span class="n">X</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[-0.39668765],
       [ 0.5256545 ],
       [ 1.46105881],
       [ 2.06909247],
       [ 1.45361793],
       [-1.23601035],
       [-0.83958668],
       [-1.42041273],
       [ 0.38529206],
       [ 0.74723321]])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Shape of A are rows and columns of the dataframe
</span><span class="n">A</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(10, 4)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Show a stat summary of the data
</span><span class="n">df</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>10.000000</td>
      <td>10.000000</td>
      <td>10.000000</td>
      <td>10.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>-0.776800</td>
      <td>0.823109</td>
      <td>0.156050</td>
      <td>0.289448</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.368299</td>
      <td>0.955949</td>
      <td>1.100099</td>
      <td>1.360076</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-3.704010</td>
      <td>-0.383277</td>
      <td>-1.479013</td>
      <td>-1.416606</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>-0.862804</td>
      <td>-0.049376</td>
      <td>-0.681005</td>
      <td>-0.395471</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>-0.528841</td>
      <td>0.883935</td>
      <td>0.124519</td>
      <td>0.092420</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>0.156078</td>
      <td>1.655364</td>
      <td>0.851772</td>
      <td>1.017481</td>
    </tr>
    <tr>
      <th>max</th>
      <td>0.526778</td>
      <td>2.062913</td>
      <td>1.709313</td>
      <td>3.173983</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Show a summary of our dataframe
</span><span class="n">df</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 10 entries, a to j
Data columns (total 4 columns):
A    10 non-null float64
B    10 non-null float64
C    10 non-null float64
D    10 non-null float64
dtypes: float64(4)
memory usage: 720.0+ bytes
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Transpose data
</span><span class="n">df</span><span class="p">.</span><span class="n">T</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>a</th>
      <th>b</th>
      <th>c</th>
      <th>d</th>
      <th>e</th>
      <th>f</th>
      <th>g</th>
      <th>h</th>
      <th>i</th>
      <th>j</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>A</th>
      <td>0.260968</td>
      <td>-0.158592</td>
      <td>-3.704010</td>
      <td>-0.454166</td>
      <td>-2.583424</td>
      <td>-0.629530</td>
      <td>-0.940561</td>
      <td>0.526778</td>
      <td>0.518058</td>
      <td>-0.603516</td>
    </tr>
    <tr>
      <th>B</th>
      <td>1.462966</td>
      <td>1.765306</td>
      <td>0.346566</td>
      <td>1.719496</td>
      <td>-0.319739</td>
      <td>1.421304</td>
      <td>-0.176530</td>
      <td>-0.383277</td>
      <td>2.062913</td>
      <td>0.332087</td>
    </tr>
    <tr>
      <th>C</th>
      <td>0.935928</td>
      <td>0.153076</td>
      <td>1.709313</td>
      <td>0.095962</td>
      <td>-0.212480</td>
      <td>-0.837180</td>
      <td>-1.086958</td>
      <td>0.599304</td>
      <td>1.682550</td>
      <td>-1.479013</td>
    </tr>
    <tr>
      <th>D</th>
      <td>-1.416606</td>
      <td>-0.099588</td>
      <td>3.173983</td>
      <td>-1.357128</td>
      <td>1.210537</td>
      <td>0.438314</td>
      <td>-0.494099</td>
      <td>0.267912</td>
      <td>-0.083072</td>
      <td>1.254228</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Sort by values
</span><span class="n">df</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'C'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>c</th>
      <td>-3.704010</td>
      <td>0.346566</td>
      <td>1.709313</td>
      <td>3.173983</td>
    </tr>
    <tr>
      <th>i</th>
      <td>0.518058</td>
      <td>2.062913</td>
      <td>1.682550</td>
      <td>-0.083072</td>
    </tr>
    <tr>
      <th>a</th>
      <td>0.260968</td>
      <td>1.462966</td>
      <td>0.935928</td>
      <td>-1.416606</td>
    </tr>
    <tr>
      <th>h</th>
      <td>0.526778</td>
      <td>-0.383277</td>
      <td>0.599304</td>
      <td>0.267912</td>
    </tr>
    <tr>
      <th>b</th>
      <td>-0.158592</td>
      <td>1.765306</td>
      <td>0.153076</td>
      <td>-0.099588</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.454166</td>
      <td>1.719496</td>
      <td>0.095962</td>
      <td>-1.357128</td>
    </tr>
    <tr>
      <th>e</th>
      <td>-2.583424</td>
      <td>-0.319739</td>
      <td>-0.212480</td>
      <td>1.210537</td>
    </tr>
    <tr>
      <th>f</th>
      <td>-0.629530</td>
      <td>1.421304</td>
      <td>-0.837180</td>
      <td>0.438314</td>
    </tr>
    <tr>
      <th>g</th>
      <td>-0.940561</td>
      <td>-0.176530</td>
      <td>-1.086958</td>
      <td>-0.494099</td>
    </tr>
    <tr>
      <th>j</th>
      <td>-0.603516</td>
      <td>0.332087</td>
      <td>-1.479013</td>
      <td>1.254228</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="selection">Selection</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Initial Dataframe
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="n">index</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s">'abcdefghij'</span><span class="p">),</span>
             <span class="n">columns</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s">'ABCD'</span><span class="p">))</span>
<span class="n">df</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>-0.294648</td>
      <td>0.023458</td>
      <td>-0.735998</td>
      <td>-0.552704</td>
    </tr>
    <tr>
      <th>b</th>
      <td>-1.030628</td>
      <td>1.069447</td>
      <td>0.483863</td>
      <td>0.723867</td>
    </tr>
    <tr>
      <th>c</th>
      <td>0.253603</td>
      <td>0.066511</td>
      <td>0.141998</td>
      <td>0.406838</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.807581</td>
      <td>-0.065567</td>
      <td>-0.399008</td>
      <td>0.321400</td>
    </tr>
    <tr>
      <th>e</th>
      <td>0.417448</td>
      <td>-0.397863</td>
      <td>1.852155</td>
      <td>2.455886</td>
    </tr>
    <tr>
      <th>f</th>
      <td>0.287584</td>
      <td>0.317224</td>
      <td>0.767366</td>
      <td>-0.053437</td>
    </tr>
    <tr>
      <th>g</th>
      <td>0.457348</td>
      <td>-1.253723</td>
      <td>2.869324</td>
      <td>-0.327216</td>
    </tr>
    <tr>
      <th>h</th>
      <td>-0.268315</td>
      <td>-0.588351</td>
      <td>1.476119</td>
      <td>-0.224964</td>
    </tr>
    <tr>
      <th>i</th>
      <td>0.436500</td>
      <td>1.178807</td>
      <td>0.452377</td>
      <td>0.083320</td>
    </tr>
    <tr>
      <th>j</th>
      <td>-1.013040</td>
      <td>-1.230992</td>
      <td>-0.021071</td>
      <td>3.256197</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select a single column. Returns a Series
</span><span class="n">df</span><span class="p">[</span><span class="s">'A'</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a   -0.294648
b   -1.030628
c    0.253603
d   -0.807581
e    0.417448
f    0.287584
g    0.457348
h   -0.268315
i    0.436500
j   -1.013040
Name: A, dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select a single column. Returns a Series
</span><span class="n">df</span><span class="p">.</span><span class="n">B</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a    0.023458
b    1.069447
c    0.066511
d   -0.065567
e   -0.397863
f    0.317224
g   -1.253723
h   -0.588351
i    1.178807
j   -1.230992
Name: B, dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select a slice of rows. Recall indexes start at 0
</span><span class="n">df</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>c</th>
      <td>0.253603</td>
      <td>0.066511</td>
      <td>0.141998</td>
      <td>0.406838</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.807581</td>
      <td>-0.065567</td>
      <td>-0.399008</td>
      <td>0.321400</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select on multi-axis
</span><span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span> <span class="p">[</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">]]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>-0.294648</td>
      <td>-0.552704</td>
    </tr>
    <tr>
      <th>b</th>
      <td>-1.030628</td>
      <td>0.723867</td>
    </tr>
    <tr>
      <th>c</th>
      <td>0.253603</td>
      <td>0.406838</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.807581</td>
      <td>0.321400</td>
    </tr>
    <tr>
      <th>e</th>
      <td>0.417448</td>
      <td>2.455886</td>
    </tr>
    <tr>
      <th>f</th>
      <td>0.287584</td>
      <td>-0.053437</td>
    </tr>
    <tr>
      <th>g</th>
      <td>0.457348</td>
      <td>-0.327216</td>
    </tr>
    <tr>
      <th>h</th>
      <td>-0.268315</td>
      <td>-0.224964</td>
    </tr>
    <tr>
      <th>i</th>
      <td>0.436500</td>
      <td>0.083320</td>
    </tr>
    <tr>
      <th>j</th>
      <td>-1.013040</td>
      <td>3.256197</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select a row on multi-axis. Returns a Series
</span><span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span> <span class="p">[</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">]]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A    0.253603
D    0.406838
Name: c, dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select on multi-axis
</span><span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">],</span> <span class="p">[</span><span class="s">'A'</span><span class="p">,</span> <span class="s">'D'</span><span class="p">]]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>-0.294648</td>
      <td>-0.552704</td>
    </tr>
    <tr>
      <th>c</th>
      <td>0.253603</td>
      <td>0.406838</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Get a scalar value
</span><span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.14199778789540501
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Get a scalar value using 'at'
</span><span class="n">df</span><span class="p">.</span><span class="n">at</span><span class="p">[</span><span class="s">'c'</span><span class="p">,</span> <span class="s">'C'</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.14199778789540501
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Set values on a dataframe
</span><span class="n">indices</span> <span class="o">=</span> <span class="nb">list</span><span class="p">([</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'f'</span><span class="p">])</span>
<span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">indices</span><span class="p">,</span> <span class="s">'D'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>
<span class="n">df</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>-0.294648</td>
      <td>0.023458</td>
      <td>-0.735998</td>
      <td>100.000000</td>
    </tr>
    <tr>
      <th>b</th>
      <td>-1.030628</td>
      <td>1.069447</td>
      <td>0.483863</td>
      <td>0.723867</td>
    </tr>
    <tr>
      <th>c</th>
      <td>0.253603</td>
      <td>0.066511</td>
      <td>0.141998</td>
      <td>0.406838</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.807581</td>
      <td>-0.065567</td>
      <td>-0.399008</td>
      <td>100.000000</td>
    </tr>
    <tr>
      <th>e</th>
      <td>0.417448</td>
      <td>-0.397863</td>
      <td>1.852155</td>
      <td>2.455886</td>
    </tr>
    <tr>
      <th>f</th>
      <td>0.287584</td>
      <td>0.317224</td>
      <td>0.767366</td>
      <td>100.000000</td>
    </tr>
    <tr>
      <th>g</th>
      <td>0.457348</td>
      <td>-1.253723</td>
      <td>2.869324</td>
      <td>-0.327216</td>
    </tr>
    <tr>
      <th>h</th>
      <td>-0.268315</td>
      <td>-0.588351</td>
      <td>1.476119</td>
      <td>-0.224964</td>
    </tr>
    <tr>
      <th>i</th>
      <td>0.436500</td>
      <td>1.178807</td>
      <td>0.452377</td>
      <td>0.083320</td>
    </tr>
    <tr>
      <th>j</th>
      <td>-1.013040</td>
      <td>-1.230992</td>
      <td>-0.021071</td>
      <td>3.256197</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select by position
</span><span class="n">df</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A    0.253603
B    0.066511
C    0.141998
D    0.406838
Name: c, dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select like slicing
</span><span class="n">df</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">:</span><span class="mi">3</span><span class="p">]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>B</th>
      <th>C</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>c</th>
      <td>0.066511</td>
      <td>0.141998</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.065567</td>
      <td>-0.399008</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Select specific locations
</span><span class="n">df</span><span class="p">.</span><span class="n">iloc</span><span class="p">[[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">]]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>C</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>b</th>
      <td>-1.030628</td>
      <td>0.483863</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.807581</td>
      <td>-0.399008</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Slice rows
</span><span class="n">df</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">7</span><span class="p">,</span> <span class="p">:]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>e</th>
      <td>0.417448</td>
      <td>-0.397863</td>
      <td>1.852155</td>
      <td>2.455886</td>
    </tr>
    <tr>
      <th>f</th>
      <td>0.287584</td>
      <td>0.317224</td>
      <td>0.767366</td>
      <td>100.000000</td>
    </tr>
    <tr>
      <th>g</th>
      <td>0.457348</td>
      <td>-1.253723</td>
      <td>2.869324</td>
      <td>-0.327216</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Slice columns
</span><span class="n">df</span><span class="p">.</span><span class="n">iloc</span><span class="p">[:,</span> <span class="mi">2</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>a</th>
      <td>-0.735998</td>
      <td>100.000000</td>
    </tr>
    <tr>
      <th>b</th>
      <td>0.483863</td>
      <td>0.723867</td>
    </tr>
    <tr>
      <th>c</th>
      <td>0.141998</td>
      <td>0.406838</td>
    </tr>
    <tr>
      <th>d</th>
      <td>-0.399008</td>
      <td>100.000000</td>
    </tr>
    <tr>
      <th>e</th>
      <td>1.852155</td>
      <td>2.455886</td>
    </tr>
    <tr>
      <th>f</th>
      <td>0.767366</td>
      <td>100.000000</td>
    </tr>
    <tr>
      <th>g</th>
      <td>2.869324</td>
      <td>-0.327216</td>
    </tr>
    <tr>
      <th>h</th>
      <td>1.476119</td>
      <td>-0.224964</td>
    </tr>
    <tr>
      <th>i</th>
      <td>0.452377</td>
      <td>0.083320</td>
    </tr>
    <tr>
      <th>j</th>
      <td>-0.021071</td>
      <td>3.256197</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Get a scalar value at specific position
</span><span class="n">df</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.40683806053761956
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Get a scalar value at specific position using 'iat'
</span><span class="n">df</span><span class="p">.</span><span class="n">iat</span><span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0.40683806053761956
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Boolean indexing
</span>
</code></pre></div></div>

<h3 id="common-features">Common features</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Load dataset into a dataframe
</span><span class="kn">import</span> <span class="nn">os</span>
<span class="n">datapath</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="s">"datasets"</span><span class="p">,</span> <span class="s">"islr"</span><span class="p">,</span> <span class="s">""</span><span class="p">)</span>
<span class="n">auto</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="n">datapath</span> <span class="o">+</span> <span class="s">"dataset_filename.csv"</span><span class="p">,</span> 
                   <span class="n">delim_whitespace</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">na_values</span><span class="o">=</span><span class="s">'?'</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Query NaN values
</span><span class="n">auto</span><span class="p">[</span><span class="n">auto</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">any</span><span class="p">(</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>mpg</th>
      <th>cylinders</th>
      <th>displacement</th>
      <th>horsepower</th>
      <th>weight</th>
      <th>acceleration</th>
      <th>year</th>
      <th>origin</th>
      <th>name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>32</th>
      <td>25.0</td>
      <td>4</td>
      <td>98.0</td>
      <td>NaN</td>
      <td>2046.0</td>
      <td>19.0</td>
      <td>71</td>
      <td>1</td>
      <td>ford pinto</td>
    </tr>
    <tr>
      <th>126</th>
      <td>21.0</td>
      <td>6</td>
      <td>200.0</td>
      <td>NaN</td>
      <td>2875.0</td>
      <td>17.0</td>
      <td>74</td>
      <td>1</td>
      <td>ford maverick</td>
    </tr>
    <tr>
      <th>330</th>
      <td>40.9</td>
      <td>4</td>
      <td>85.0</td>
      <td>NaN</td>
      <td>1835.0</td>
      <td>17.3</td>
      <td>80</td>
      <td>2</td>
      <td>renault lecar deluxe</td>
    </tr>
    <tr>
      <th>336</th>
      <td>23.6</td>
      <td>4</td>
      <td>140.0</td>
      <td>NaN</td>
      <td>2905.0</td>
      <td>14.3</td>
      <td>80</td>
      <td>1</td>
      <td>ford mustang cobra</td>
    </tr>
    <tr>
      <th>354</th>
      <td>34.5</td>
      <td>4</td>
      <td>100.0</td>
      <td>NaN</td>
      <td>2320.0</td>
      <td>15.8</td>
      <td>81</td>
      <td>2</td>
      <td>renault 18i</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Count values for a particular column
</span><span class="n">auto</span><span class="p">[</span><span class="s">'year'</span><span class="p">].</span><span class="n">value_counts</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>73    40
78    36
76    34
82    30
75    30
81    29
80    29
79    29
70    29
77    28
72    28
71    28
74    27
Name: year, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Generate a correlation matrix
</span><span class="n">auto</span><span class="p">.</span><span class="n">corr</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>mpg</th>
      <th>cylinders</th>
      <th>displacement</th>
      <th>horsepower</th>
      <th>weight</th>
      <th>acceleration</th>
      <th>year</th>
      <th>origin</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>mpg</th>
      <td>1.000000</td>
      <td>-0.776260</td>
      <td>-0.804443</td>
      <td>-0.778427</td>
      <td>-0.831739</td>
      <td>0.422297</td>
      <td>0.581469</td>
      <td>0.563698</td>
    </tr>
    <tr>
      <th>cylinders</th>
      <td>-0.776260</td>
      <td>1.000000</td>
      <td>0.950920</td>
      <td>0.842983</td>
      <td>0.897017</td>
      <td>-0.504061</td>
      <td>-0.346717</td>
      <td>-0.564972</td>
    </tr>
    <tr>
      <th>displacement</th>
      <td>-0.804443</td>
      <td>0.950920</td>
      <td>1.000000</td>
      <td>0.897257</td>
      <td>0.933104</td>
      <td>-0.544162</td>
      <td>-0.369804</td>
      <td>-0.610664</td>
    </tr>
    <tr>
      <th>horsepower</th>
      <td>-0.778427</td>
      <td>0.842983</td>
      <td>0.897257</td>
      <td>1.000000</td>
      <td>0.864538</td>
      <td>-0.689196</td>
      <td>-0.416361</td>
      <td>-0.455171</td>
    </tr>
    <tr>
      <th>weight</th>
      <td>-0.831739</td>
      <td>0.897017</td>
      <td>0.933104</td>
      <td>0.864538</td>
      <td>1.000000</td>
      <td>-0.419502</td>
      <td>-0.307900</td>
      <td>-0.581265</td>
    </tr>
    <tr>
      <th>acceleration</th>
      <td>0.422297</td>
      <td>-0.504061</td>
      <td>-0.544162</td>
      <td>-0.689196</td>
      <td>-0.419502</td>
      <td>1.000000</td>
      <td>0.282901</td>
      <td>0.210084</td>
    </tr>
    <tr>
      <th>year</th>
      <td>0.581469</td>
      <td>-0.346717</td>
      <td>-0.369804</td>
      <td>-0.416361</td>
      <td>-0.307900</td>
      <td>0.282901</td>
      <td>1.000000</td>
      <td>0.184314</td>
    </tr>
    <tr>
      <th>origin</th>
      <td>0.563698</td>
      <td>-0.564972</td>
      <td>-0.610664</td>
      <td>-0.455171</td>
      <td>-0.581265</td>
      <td>0.210084</td>
      <td>0.184314</td>
      <td>1.000000</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Copy a dataframe
</span><span class="n">auto_copy</span> <span class="o">=</span> <span class="n">auto</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Clean data with NaN Values for a column
</span><span class="n">auto_copy</span> <span class="o">=</span> <span class="n">auto_copy</span><span class="p">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">subset</span><span class="o">=</span><span class="p">[</span><span class="s">'year'</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Clean data with NaN Values for all dataframe
</span><span class="n">auto_copy</span> <span class="o">=</span> <span class="n">auto_copy</span><span class="p">.</span><span class="n">dropna</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Drop a column
</span><span class="n">auto_copy</span> <span class="o">=</span> <span class="n">auto_copy</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'name'</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">auto_copy</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>mpg</th>
      <th>cylinders</th>
      <th>displacement</th>
      <th>horsepower</th>
      <th>weight</th>
      <th>acceleration</th>
      <th>year</th>
      <th>origin</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>18.0</td>
      <td>8</td>
      <td>307.0</td>
      <td>130.0</td>
      <td>3504.0</td>
      <td>12.0</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1</th>
      <td>15.0</td>
      <td>8</td>
      <td>350.0</td>
      <td>165.0</td>
      <td>3693.0</td>
      <td>11.5</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>18.0</td>
      <td>8</td>
      <td>318.0</td>
      <td>150.0</td>
      <td>3436.0</td>
      <td>11.0</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3</th>
      <td>16.0</td>
      <td>8</td>
      <td>304.0</td>
      <td>150.0</td>
      <td>3433.0</td>
      <td>12.0</td>
      <td>70</td>
      <td>1</td>
    </tr>
    <tr>
      <th>4</th>
      <td>17.0</td>
      <td>8</td>
      <td>302.0</td>
      <td>140.0</td>
      <td>3449.0</td>
      <td>10.5</td>
      <td>70</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Make a list from dataframe column names
</span><span class="nb">list</span><span class="p">(</span><span class="n">auto_copy</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>['mpg',
 'cylinders',
 'displacement',
 'horsepower',
 'weight',
 'acceleration',
 'year',
 'origin']
</code></pre></div></div>

<h3 id="references">References</h3>
<p>http://pandas.pydata.org/pandas-docs/stable/index.html</p>
:ET